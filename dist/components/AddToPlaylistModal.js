"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const image_1 = __importDefault(require("next/image"));
const AddToPlaylistModal = ({ playlists, loading, selectedPlaylists, userId, handleCheckboxChange, handleAddTracksToPlaylists, closeModal, }) => {
    const userPlaylists = playlists.filter((playlist) => playlist.user_id === userId);
    return ((0, jsx_runtime_1.jsx)("div", { onClick: (e) => e.stopPropagation(), className: "fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1000]", children: (0, jsx_runtime_1.jsxs)("div", { className: "bg-[#2b2b2b] p-6 rounded-lg shadow-lg w-[400px] flex flex-col gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between", children: [(0, jsx_runtime_1.jsx)("h2", { className: "text-white text-2xl font-bold", children: "Add to Playlist" }), (0, jsx_runtime_1.jsx)(image_1.default, { src: "/icons/cross.svg", alt: "cross icon", width: 28, height: 28, className: "cursor-pointer self-end", onClick: closeModal })] }), (0, jsx_runtime_1.jsx)("div", { className: "flex flex-col", children: loading ? ((0, jsx_runtime_1.jsx)("div", { className: "loader flex justify-self-center" })) : userPlaylists.length === 0 ? ((0, jsx_runtime_1.jsx)("p", { className: "text-nit text-center", children: "Looks pretty empty." })) : (userPlaylists.map((playlist) => ((0, jsx_runtime_1.jsx)("div", { className: "flex flex-col gap-4", children: (0, jsx_runtime_1.jsxs)("label", { htmlFor: playlist.id, className: "text-white cursor-pointer w-full p-5 flex items-center justify-between bg-[#2b2b2b] rounded-md transition hover:bg-[#3a3a3a]", children: [(0, jsx_runtime_1.jsx)("p", { className: "max-w-[90%]", children: playlist.name }), (0, jsx_runtime_1.jsx)("input", { type: "checkbox", id: playlist.id, className: "hidden peer", checked: selectedPlaylists.includes(playlist.id), onChange: () => handleCheckboxChange(playlist.id) }), (0, jsx_runtime_1.jsx)("label", { htmlFor: playlist.id, className: "size-6 border-2 border-[#ABAABB] rounded-full flex items-center justify-center cursor-pointer peer-checked:bg-primary peer-checked:border-primary transition", children: (0, jsx_runtime_1.jsx)("svg", { className: "hidden", fill: "none", stroke: "currentColor", strokeWidth: "2", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M5 13l4 4L19 7" }) }) })] }) }, playlist.id)))) }), (0, jsx_runtime_1.jsx)("button", { onClick: handleAddTracksToPlaylists, className: "bg-primary text-black p-2 rounded-md font-semibold w-full hover:bg-[#00e88f]", children: "Add to Playlist" })] }) }));
};
exports.default = AddToPlaylistModal;
